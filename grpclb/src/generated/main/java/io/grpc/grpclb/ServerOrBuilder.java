// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: load_balancer.proto

package io.grpc.grpclb;

public interface ServerOrBuilder extends
    // @@protoc_insertion_point(interface_extends:loadbalancer_gslb.client.grpc.Server)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>optional string ip_address = 1;</code>
   *
   * <pre>
   * A resolved address and port for the server. The IP address string may
   * either be an IPv4 or IPv6 address.
   * </pre>
   */
  java.lang.String getIpAddress();
  /**
   * <code>optional string ip_address = 1;</code>
   *
   * <pre>
   * A resolved address and port for the server. The IP address string may
   * either be an IPv4 or IPv6 address.
   * </pre>
   */
  com.google.protobuf.ByteString
      getIpAddressBytes();

  /**
   * <code>optional int32 port = 2;</code>
   */
  int getPort();

  /**
   * <code>optional bytes load_balance_token = 3;</code>
   *
   * <pre>
   * An opaque token that is passed from the client to the server in metadata.
   * The server may expect this token to indicate that the request from the
   * client was load balanced.
   * TODO(yetianx): Not used right now, and will be used after implementing
   * load report.
   * </pre>
   */
  com.google.protobuf.ByteString getLoadBalanceToken();

  /**
   * <code>optional bool drop_request = 4;</code>
   *
   * <pre>
   * Indicates whether this particular request should be dropped by the client
   * when this server is chosen from the list.
   * </pre>
   */
  boolean getDropRequest();
}
